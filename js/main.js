function initMap(){var e=new google.maps.Map(document.getElementById("map"),{center:{lat:46.45252,lng:30.7361},zoom:16,panControl:!1,zoomControl:!0,mapTypeControl:!1,scaleControl:!1,streetViewControl:!1,overviewMapControl:!1,rotateControl:!1,styles:[{featureType:"water",elementType:"geometry",stylers:[{color:"#e9e9e9"},{lightness:17}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:20}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#ffffff"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:16}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:21}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#dedede"},{lightness:21}]},{elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:16}]},{elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#333333"},{lightness:40}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#f2f2f2"},{lightness:19}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#fefefe"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#fefefe"},{lightness:17},{weight:1.2}]}]});new google.maps.Marker({position:{lat:46.453575,lng:30.740583},map:e,draggable:!1,icon:{url:"http://www.globus-moving.com/Images/misc/map-marker.png"}})}(new WOW).init(),initMap(),$(function(){$(".lazyload").lazyload()}),document.addEventListener("scroll",function(e){document.getElementById("scrollToUp").style.opacity=Number(e.target.scrollingElement.scrollTop>e.target.scrollingElement.clientHeight)}),setTimeout(function(){$("#ModalSuccess").modal("hide")},23e3);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
