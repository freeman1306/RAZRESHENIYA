!function(e,t){var n=function(e,t){"use strict";if(t.getElementsByClassName){var n,a,i=t.documentElement,r=e.Date,s=e.HTMLPictureElement,o="addEventListener",l="getAttribute",c=e[o],d=e.setTimeout,u=e.requestAnimationFrame||d,f=e.requestIdleCallback,m=/^picture$/i,z=["load","error","lazyincluded","_lazyloaded"],y={},h=Array.prototype.forEach,v=function(e,t){return y[t]||(y[t]=new RegExp("(\\s|^)"+t+"(\\s|$)")),y[t].test(e[l]("class")||"")&&y[t]},g=function(e,t){v(e,t)||e.setAttribute("class",(e[l]("class")||"").trim()+" "+t)},p=function(e,t){var n;(n=v(e,t))&&e.setAttribute("class",(e[l]("class")||"").replace(n," "))},C=function(e,t,n){var a=n?o:"removeEventListener";n&&C(e,t),z.forEach(function(n){e[a](n,t)})},b=function(e,a,i,r,s){var o=t.createEvent("Event");return i||(i={}),i.instance=n,o.initEvent(a,!r,!s),o.detail=i,e.dispatchEvent(o),o},A=function(t,n){var i;!s&&(i=e.picturefill||a.pf)?(n&&n.src&&!t[l]("srcset")&&t.setAttribute("srcset",n.src),i({reevaluate:!0,elements:[t]})):n&&n.src&&(t.src=n.src)},E=function(e,t){return(getComputedStyle(e,null)||{})[t]},_=function(e,t,n){for(n=n||e.offsetWidth;n<a.minSize&&t&&!e._lazysizesWidth;)n=t.offsetWidth,t=t.parentNode;return n},w=function(){var e,n,a=[],i=[],r=a,s=function(){var t=r;for(r=a.length?i:a,e=!0,n=!1;t.length;)t.shift()();e=!1},o=function(a,i){e&&!i?a.apply(this,arguments):(r.push(a),n||(n=!0,(t.hidden?d:u)(s)))};return o._lsFlush=s,o}(),M=function(e,t){return t?function(){w(e)}:function(){var t=this,n=arguments;w(function(){e.apply(t,n)})}},N=function(e){var t,n=0,i=a.throttleDelay,s=a.ricTimeout,o=function(){t=!1,n=r.now(),e()},l=f&&s>49?function(){f(o,{timeout:s}),s!==a.ricTimeout&&(s=a.ricTimeout)}:M(function(){d(o)},!0);return function(e){var a;(e=!0===e)&&(s=33),t||(t=!0,(a=i-(r.now()-n))<0&&(a=0),e||a<9?l():d(l,a))}},x=function(e){var t,n,a=function(){t=null,e()},i=function(){var e=r.now()-n;e<99?d(i,99-e):(f||a)(a)};return function(){n=r.now(),t||(t=d(i,99))}};!function(){var t,n={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:!0,expFactor:1.5,hFac:.8,loadMode:2,loadHidden:!0,ricTimeout:0,throttleDelay:125};for(t in a=e.lazySizesConfig||e.lazysizesConfig||{},n)t in a||(a[t]=n[t]);e.lazySizesConfig=a,d(function(){a.init&&B()})}();var W=function(){var s,u,f,z,y,_,W,B,F,S,L,R,k=/^img$/i,D=/^iframe$/i,H="onscroll"in e&&!/(gle|ing)bot/.test(navigator.userAgent),O=0,P=0,$=-1,I=function(e){P--,(!e||P<0||!e.target)&&(P=0)},q=function(e){return null==R&&(R="hidden"==E(t.body,"visibility")),R||"hidden"!=E(e.parentNode,"visibility")&&"hidden"!=E(e,"visibility")},j=function(e,n){var a,r=e,s=q(e);for(B-=n,L+=n,F-=n,S+=n;s&&(r=r.offsetParent)&&r!=t.body&&r!=i;)(s=(E(r,"opacity")||1)>0)&&"visible"!=E(r,"overflow")&&(a=r.getBoundingClientRect(),s=S>a.left&&F<a.right&&L>a.top-1&&B<a.bottom+1);return s},G=function(){var e,r,o,c,d,f,m,y,h,v,g,p,C=n.elements;if((z=a.loadMode)&&P<8&&(e=C.length)){for(r=0,$++,v=!a.expand||a.expand<1?i.clientHeight>500&&i.clientWidth>500?500:370:a.expand,n._defEx=v,g=v*a.expFactor,p=a.hFac,R=null,O<g&&P<1&&$>2&&z>2&&!t.hidden?(O=g,$=0):O=z>1&&$>1&&P<6?v:0;r<e;r++)if(C[r]&&!C[r]._lazyRace)if(H)if((y=C[r][l]("data-expand"))&&(f=1*y)||(f=O),h!==f&&(_=innerWidth+f*p,W=innerHeight+f,m=-1*f,h=f),o=C[r].getBoundingClientRect(),(L=o.bottom)>=m&&(B=o.top)<=W&&(S=o.right)>=m*p&&(F=o.left)<=_&&(L||S||F||B)&&(a.loadHidden||q(C[r]))&&(u&&P<3&&!y&&(z<3||$<4)||j(C[r],f))){if(Y(C[r]),d=!0,P>9)break}else!d&&u&&!c&&P<4&&$<4&&z>2&&(s[0]||a.preloadAfterLoad)&&(s[0]||!y&&(L||S||F||B||"auto"!=C[r][l](a.sizesAttr)))&&(c=s[0]||C[r]);else Y(C[r]);c&&!d&&Y(c)}},J=N(G),K=function(e){var t=e.target;t._lazyCache?delete t._lazyCache:(I(e),g(t,a.loadedClass),p(t,a.loadingClass),C(t,U),b(t,"lazyloaded"))},Q=M(K),U=function(e){Q({target:e.target})},V=function(e){var t,n=e[l](a.srcsetAttr);(t=a.customMedia[e[l]("data-media")||e[l]("media")])&&e.setAttribute("media",t),n&&e.setAttribute("srcset",n)},X=M(function(e,t,n,i,r){var s,o,c,u,z,y;(z=b(e,"lazybeforeunveil",t)).defaultPrevented||(i&&(n?g(e,a.autosizesClass):e.setAttribute("sizes",i)),o=e[l](a.srcsetAttr),s=e[l](a.srcAttr),r&&(c=e.parentNode,u=c&&m.test(c.nodeName||"")),y=t.firesLoad||"src"in e&&(o||s||u),z={target:e},g(e,a.loadingClass),y&&(clearTimeout(f),f=d(I,2500),C(e,U,!0)),u&&h.call(c.getElementsByTagName("source"),V),o?e.setAttribute("srcset",o):s&&!u&&(D.test(e.nodeName)?function(e,t){try{e.contentWindow.location.replace(t)}catch(n){e.src=t}}(e,s):e.src=s),r&&(o||u)&&A(e,{src:s})),e._lazyRace&&delete e._lazyRace,p(e,a.lazyClass),w(function(){(!y||e.complete&&e.naturalWidth>1)&&(K(z),e._lazyCache=!0,d(function(){"_lazyCache"in e&&delete e._lazyCache},9))},!0)}),Y=function(e){var t,n=k.test(e.nodeName),i=n&&(e[l](a.sizesAttr)||e[l]("sizes")),r="auto"==i;(!r&&u||!n||!e[l]("src")&&!e.srcset||e.complete||v(e,a.errorClass)||!v(e,a.lazyClass))&&(t=b(e,"lazyunveilread").detail,r&&T.updateElem(e,!0,e.offsetWidth),e._lazyRace=!0,P++,X(e,t,r,i,n))},Z=function(){if(!u){if(r.now()-y<999)return void d(Z,999);var e=x(function(){a.loadMode=3,J()});u=!0,a.loadMode=3,J(),c("scroll",function(){3==a.loadMode&&(a.loadMode=2),e()},!0)}};return{_:function(){y=r.now(),n.elements=t.getElementsByClassName(a.lazyClass),s=t.getElementsByClassName(a.lazyClass+" "+a.preloadClass),c("scroll",J,!0),c("resize",J,!0),e.MutationObserver?new MutationObserver(J).observe(i,{childList:!0,subtree:!0,attributes:!0}):(i[o]("DOMNodeInserted",J,!0),i[o]("DOMAttrModified",J,!0),setInterval(J,999)),c("hashchange",J,!0),["focus","mouseover","click","load","transitionend","animationend","webkitAnimationEnd"].forEach(function(e){t[o](e,J,!0)}),/d$|^c/.test(t.readyState)?Z():(c("load",Z),t[o]("DOMContentLoaded",J),d(Z,2e4)),n.elements.length?(G(),w._lsFlush()):J()},checkElems:J,unveil:Y}}(),T=function(){var e,n=M(function(e,t,n,a){var i,r,s;if(e._lazysizesWidth=a,a+="px",e.setAttribute("sizes",a),m.test(t.nodeName||""))for(i=t.getElementsByTagName("source"),r=0,s=i.length;r<s;r++)i[r].setAttribute("sizes",a);n.detail.dataAttr||A(e,n.detail)}),i=function(e,t,a){var i,r=e.parentNode;r&&(a=_(e,r,a),(i=b(e,"lazybeforesizes",{width:a,dataAttr:!!t})).defaultPrevented||(a=i.detail.width)&&a!==e._lazysizesWidth&&n(e,r,i,a))},r=x(function(){var t,n=e.length;if(n)for(t=0;t<n;t++)i(e[t])});return{_:function(){e=t.getElementsByClassName(a.autosizesClass),c("resize",r)},checkElems:r,updateElem:i}}(),B=function(){B.i||(B.i=!0,T._(),W._())};return n={cfg:a,autoSizer:T,loader:W,init:B,uP:A,aC:g,rC:p,hC:v,fire:b,gW:_,rAF:w}}}(e,e.document);e.lazySizes=n,"object"==typeof module&&module.exports&&(module.exports=n)}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhenlsb2FkLmpzIl0sIm5hbWVzIjpbImEiLCJiIiwiYyIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJkIiwiZSIsImRvY3VtZW50RWxlbWVudCIsImYiLCJEYXRlIiwiZyIsIkhUTUxQaWN0dXJlRWxlbWVudCIsImgiLCJpIiwiaiIsImsiLCJzZXRUaW1lb3V0IiwibCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm0iLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwibiIsIm8iLCJwIiwicSIsIkFycmF5IiwicHJvdG90eXBlIiwiZm9yRWFjaCIsInIiLCJSZWdFeHAiLCJ0ZXN0IiwicyIsInNldEF0dHJpYnV0ZSIsInRyaW0iLCJ0IiwicmVwbGFjZSIsInUiLCJ2IiwiY3JlYXRlRXZlbnQiLCJpbnN0YW5jZSIsImluaXRFdmVudCIsImRldGFpbCIsImRpc3BhdGNoRXZlbnQiLCJ3IiwicGljdHVyZWZpbGwiLCJwZiIsInNyYyIsInJlZXZhbHVhdGUiLCJlbGVtZW50cyIsIngiLCJnZXRDb21wdXRlZFN0eWxlIiwieSIsIm9mZnNldFdpZHRoIiwibWluU2l6ZSIsIl9sYXp5c2l6ZXNXaWR0aCIsInBhcmVudE5vZGUiLCJ6IiwibGVuZ3RoIiwic2hpZnQiLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJwdXNoIiwiaGlkZGVuIiwiX2xzRmx1c2giLCJBIiwiQiIsInRocm90dGxlRGVsYXkiLCJyaWNUaW1lb3V0Iiwibm93IiwidGltZW91dCIsIkMiLCJsYXp5Q2xhc3MiLCJsb2FkZWRDbGFzcyIsImxvYWRpbmdDbGFzcyIsInByZWxvYWRDbGFzcyIsImVycm9yQ2xhc3MiLCJhdXRvc2l6ZXNDbGFzcyIsInNyY0F0dHIiLCJzcmNzZXRBdHRyIiwic2l6ZXNBdHRyIiwiY3VzdG9tTWVkaWEiLCJpbml0IiwiZXhwRmFjdG9yIiwiaEZhYyIsImxvYWRNb2RlIiwibG9hZEhpZGRlbiIsImxhenlTaXplc0NvbmZpZyIsImxhenlzaXplc0NvbmZpZyIsIkYiLCJEIiwiRyIsIkgiLCJJIiwiSiIsIksiLCJMIiwiTSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIk8iLCJQIiwiUSIsIlIiLCJ0YXJnZXQiLCJTIiwiYm9keSIsIlQiLCJvZmZzZXRQYXJlbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJib3R0b20iLCJVIiwiZXhwYW5kIiwiY2xpZW50SGVpZ2h0IiwiY2xpZW50V2lkdGgiLCJfZGVmRXgiLCJfbGF6eVJhY2UiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJhYSIsInByZWxvYWRBZnRlckxvYWQiLCJWIiwiVyIsIl9sYXp5Q2FjaGUiLCJZIiwiWCIsIiQiLCJfIiwiZGVmYXVsdFByZXZlbnRlZCIsIm5vZGVOYW1lIiwiZmlyZXNMb2FkIiwiY2xlYXJUaW1lb3V0IiwiY2FsbCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiWiIsImNvbXBsZXRlIiwibmF0dXJhbFdpZHRoIiwic3Jjc2V0IiwiRSIsInVwZGF0ZUVsZW0iLCJiYSIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsImF0dHJpYnV0ZXMiLCJzZXRJbnRlcnZhbCIsInJlYWR5U3RhdGUiLCJjaGVja0VsZW1zIiwidW52ZWlsIiwiZGF0YUF0dHIiLCJ3aWR0aCIsImNmZyIsImF1dG9TaXplciIsImxvYWRlciIsInVQIiwiYUMiLCJyQyIsImhDIiwiZmlyZSIsImdXIiwickFGIiwiZG9jdW1lbnQiLCJsYXp5U2l6ZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwid2luZG93Il0sIm1hcHBpbmdzIjoiQ0FBNEIsU0FBVUEsRUFBR0MsR0FDckMsSUFBSUMsRUFFRSxTQUFVRixFQUFHQyxHQUNuQixhQUNBLEdBQUlBLEVBQUVFLHVCQUF3QixDQUMxQixJQUFJRCxFQUFHRSxFQUFHQyxFQUFJSixFQUFFSyxnQkFDWkMsRUFBSVAsRUFBRVEsS0FDTkMsRUFBSVQsRUFBRVUs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QyxVQUVoQ25DLEVBQUksU0FBVUwsRUFBR0MsRUFBR0csR0FDaEIsSUFBSUMsRUFBR0UsRUFBSVAsRUFBRXNELFdBQ2IvQyxJQUFNSCxFQUFJOEMsRUFBRWxELEVBQUdPLEVBQUdILElBQUlDLEVBQUkrQixFQUFFcEMsRUFBRyxrQkFBbUIsQ0FDOUMySixNQUFPdkosRUFDUHNKLFdBQVl6SixLQUNWaUksbUJBQXFCOUgsRUFBSUMsRUFBRW1DLE9BQU9tSCxRQUFVdkosSUFBTUosRUFBRXFELGlCQUFtQm5ELEVBQUVGLEVBQUdPLEVBQUdGLEVBQUdELEtBTzVGSyxFQUFJNkQsRUFMQSxXQUNBLElBQUlyRSxFQUFHQyxFQUFJRixFQUFFd0QsT0FDYixHQUFJdEQsRUFDQSxJQUFLRCxFQUFJLEVBQUdBLEVBQUlDLEVBQUdELElBQUtJLEVBQUVMLEVBQUVDLE1BR3hDLE1BQU8sQ0FDSGdJLEVBQUcsV0FDQ2pJLEVBQUlDLEVBQUVFLHVCQUF1QkMsRUFBRXdFLGdCQUFpQi9ELEVBQUUsU0FBVUosSUFFaEUrSSxXQUFZL0ksRUFDWnNJLFdBQVkxSSxHQXpCaEIsR0E0QkptRixFQUFJLFdBQ0FBLEVBQUU1RSxJQUFNNEUsRUFBRTVFLEdBQUksRUFBSWtJLEVBQUViLElBQUt4QyxFQUFFd0MsTUFFbkMsT0FBTy9ILEVBQUksQ0FDUDBKLElBQUt4SixFQUNMeUosVUFBV2YsRUFDWGdCLE9BQVFyRSxFQUNSUixLQUFNTyxFQUNOdUUsR0FBSXJILEVBQ0pzSCxHQUFJbEksRUFDSm1JLEdBQUloSSxFQUNKaUksR0FBSXZJLEVBQ0p3SSxLQUFNL0gsRUFDTmdJLEdBQUlsSCxFQUNKbUgsSUFBSzlHLElBclJMdEQsQ0FBRUQsRUFBR0EsRUFBRXNLLFVBQ2Z0SyxFQUFFdUssVUFBWXJLLEVBQUcsaUJBQW1Cc0ssUUFBVUEsT0FBT0MsVUFBWUQsT0FBT0MsUUFBVXZLLEdBRjFELENBRzFCd0siLCJmaWxlIjoibGF6eWxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbGF6eXNpemVzIC0gdjQuMS43ICovICEgZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgIHZhciBjID0gYihhLCBhLmRvY3VtZW50KTtcclxuICAgIGEubGF6eVNpemVzID0gYywgXCJvYmplY3RcIiA9PSB0eXBlb2YgbW9kdWxlICYmIG1vZHVsZS5leHBvcnRzICYmIChtb2R1bGUuZXhwb3J0cyA9IGMpXHJcbn0od2luZG93LCBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgICBpZiAoYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKSB7XHJcbiAgICAgICAgdmFyIGMsIGQsIGUgPSBiLmRvY3VtZW50RWxlbWVudCxcclxuICAgICAgICAgICAgZiA9IGEuRGF0ZSxcclxuICAgICAgICAgICAgZyA9IGEuSFRNTFBpY3R1cmVFbGVtZW50LFxyXG4gICAgICAgICAgICBoID0gXCJhZGRFdmVudExpc3RlbmVyXCIsXHJcbiAgICAgICAgICAgIGkgPSBcImdldEF0dHJpYnV0ZVwiLFxyXG4gICAgICAgICAgICBqID0gYVtoXSxcclxuICAgICAgICAgICAgayA9IGEuc2V0VGltZW91dCxcclxuICAgICAgICAgICAgbCA9IGEucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IGssXHJcbiAgICAgICAgICAgIG0gPSBhLnJlcXVlc3RJZGxlQ2FsbGJhY2ssXHJcbiAgICAgICAgICAgIG4gPSAvXnBpY3R1cmUkL2ksXHJcbiAgICAgICAgICAgIG8gPSBbXCJsb2FkXCIsIFwiZXJyb3JcIiwgXCJsYXp5aW5jbHVkZWRcIiwgXCJfbGF6eWxvYWRlZFwiXSxcclxuICAgICAgICAgICAgcCA9IHt9LFxyXG4gICAgICAgICAgICBxID0gQXJyYXkucHJvdG90eXBlLmZvckVhY2gsXHJcbiAgICAgICAgICAgIHIgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBbYl0gfHwgKHBbYl0gPSBuZXcgUmVnRXhwKFwiKFxcXFxzfF4pXCIgKyBiICsgXCIoXFxcXHN8JClcIikpLCBwW2JdLnRlc3QoYVtpXShcImNsYXNzXCIpIHx8IFwiXCIpICYmIHBbYl1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcyA9IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgICAgICAgICByKGEsIGIpIHx8IGEuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgKGFbaV0oXCJjbGFzc1wiKSB8fCBcIlwiKS50cmltKCkgKyBcIiBcIiArIGIpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHQgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGM7XHJcbiAgICAgICAgICAgICAgICAoYyA9IHIoYSwgYikpICYmIGEuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgKGFbaV0oXCJjbGFzc1wiKSB8fCBcIlwiKS5yZXBsYWNlKGMsIFwiIFwiKSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdSA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZCA9IGMgPyBoIDogXCJyZW1vdmVFdmVudExpc3RlbmVyXCI7XHJcbiAgICAgICAgICAgICAgICBjICYmIHUoYSwgYiksIG8uZm9yRWFjaChmdW5jdGlvbiAoYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGFbZF0oYywgYilcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHYgPSBmdW5jdGlvbiAoYSwgZCwgZSwgZiwgZykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGggPSBiLmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZSB8fCAoZSA9IHt9KSwgZS5pbnN0YW5jZSA9IGMsIGguaW5pdEV2ZW50KGQsICFmLCAhZyksIGguZGV0YWlsID0gZSwgYS5kaXNwYXRjaEV2ZW50KGgpLCBoXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHcgPSBmdW5jdGlvbiAoYiwgYykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGU7XHJcbiAgICAgICAgICAgICAgICAhZyAmJiAoZSA9IGEucGljdHVyZWZpbGwgfHwgZC5wZikgPyAoYyAmJiBjLnNyYyAmJiAhYltpXShcInNyY3NldFwiKSAmJiBiLnNldEF0dHJpYnV0ZShcInNyY3NldFwiLCBjLnNyYyksIGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIHJlZXZhbHVhdGU6ICEwLFxyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzOiBbYl1cclxuICAgICAgICAgICAgICAgIH0pKSA6IGMgJiYgYy5zcmMgJiYgKGIuc3JjID0gYy5zcmMpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHggPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChnZXRDb21wdXRlZFN0eWxlKGEsIG51bGwpIHx8IHt9KVtiXVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB5ID0gZnVuY3Rpb24gKGEsIGIsIGMpIHtcclxuICAgICAgICAgICAgICAgIGZvciAoYyA9IGMgfHwgYS5vZmZzZXRXaWR0aDsgYyA8IGQubWluU2l6ZSAmJiBiICYmICFhLl9sYXp5c2l6ZXNXaWR0aDspIGMgPSBiLm9mZnNldFdpZHRoLCBiID0gYi5wYXJlbnROb2RlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgeiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhLCBjLCBkID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgZSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgIGYgPSBkLFxyXG4gICAgICAgICAgICAgICAgICAgIGcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiID0gZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChmID0gZC5sZW5ndGggPyBlIDogZCwgYSA9ICEwLCBjID0gITE7IGIubGVuZ3RoOykgYi5zaGlmdCgpKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEgPSAhMVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgaCA9IGZ1bmN0aW9uIChkLCBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEgJiYgIWUgPyBkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiAoZi5wdXNoKGQpLCBjIHx8IChjID0gITAsIChiLmhpZGRlbiA/IGsgOiBsKShnKSkpXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBoLl9sc0ZsdXNoID0gZywgaFxyXG4gICAgICAgICAgICB9KCksXHJcbiAgICAgICAgICAgIEEgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGIgPyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeihhKVxyXG4gICAgICAgICAgICAgICAgfSA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYiA9IHRoaXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGMgPSBhcmd1bWVudHM7XHJcbiAgICAgICAgICAgICAgICAgICAgeihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEuYXBwbHkoYiwgYylcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBCID0gZnVuY3Rpb24gKGEpIHtcclxuICAgICAgICAgICAgICAgIHZhciBiLCBjID0gMCxcclxuICAgICAgICAgICAgICAgICAgICBlID0gZC50aHJvdHRsZURlbGF5LFxyXG4gICAgICAgICAgICAgICAgICAgIGcgPSBkLnJpY1RpbWVvdXQsXHJcbiAgICAgICAgICAgICAgICAgICAgaCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYiA9ICExLCBjID0gZi5ub3coKSwgYSgpXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBpID0gbSAmJiBnID4gNDkgPyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG0oaCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSwgZyAhPT0gZC5yaWNUaW1lb3V0ICYmIChnID0gZC5yaWNUaW1lb3V0KVxyXG4gICAgICAgICAgICAgICAgICAgIH0gOiBBKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgayhoKVxyXG4gICAgICAgICAgICAgICAgICAgIH0sICEwKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkO1xyXG4gICAgICAgICAgICAgICAgICAgIChhID0gITAgPT09IGEpICYmIChnID0gMzMpLCBiIHx8IChiID0gITAsIGQgPSBlIC0gKGYubm93KCkgLSBjKSwgZCA8IDAgJiYgKGQgPSAwKSwgYSB8fCBkIDwgOSA/IGkoKSA6IGsoaSwgZCkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEMgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGIsIGMsIGQgPSA5OSxcclxuICAgICAgICAgICAgICAgICAgICBlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiID0gbnVsbCwgYSgpXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBnID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IGYubm93KCkgLSBjO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhIDwgZCA/IGsoZywgZCAtIGEpIDogKG0gfHwgZSkoZSlcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjID0gZi5ub3coKSwgYiB8fCAoYiA9IGsoZywgZCkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgISBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBiLCBjID0ge1xyXG4gICAgICAgICAgICAgICAgbGF6eUNsYXNzOiBcImxhenlsb2FkXCIsXHJcbiAgICAgICAgICAgICAgICBsb2FkZWRDbGFzczogXCJsYXp5bG9hZGVkXCIsXHJcbiAgICAgICAgICAgICAgICBsb2FkaW5nQ2xhc3M6IFwibGF6eWxvYWRpbmdcIixcclxuICAgICAgICAgICAgICAgIHByZWxvYWRDbGFzczogXCJsYXp5cHJlbG9hZFwiLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JDbGFzczogXCJsYXp5ZXJyb3JcIixcclxuICAgICAgICAgICAgICAgIGF1dG9zaXplc0NsYXNzOiBcImxhenlhdXRvc2l6ZXNcIixcclxuICAgICAgICAgICAgICAgIHNyY0F0dHI6IFwiZGF0YS1zcmNcIixcclxuICAgICAgICAgICAgICAgIHNyY3NldEF0dHI6IFwiZGF0YS1zcmNzZXRcIixcclxuICAgICAgICAgICAgICAgIHNpemVzQXR0cjogXCJkYXRhLXNpemVzXCIsXHJcbiAgICAgICAgICAgICAgICBtaW5TaXplOiA0MCxcclxuICAgICAgICAgICAgICAgIGN1c3RvbU1lZGlhOiB7fSxcclxuICAgICAgICAgICAgICAgIGluaXQ6ICEwLFxyXG4gICAgICAgICAgICAgICAgZXhwRmFjdG9yOiAxLjUsXHJcbiAgICAgICAgICAgICAgICBoRmFjOiAuOCxcclxuICAgICAgICAgICAgICAgIGxvYWRNb2RlOiAyLFxyXG4gICAgICAgICAgICAgICAgbG9hZEhpZGRlbjogITAsXHJcbiAgICAgICAgICAgICAgICByaWNUaW1lb3V0OiAwLFxyXG4gICAgICAgICAgICAgICAgdGhyb3R0bGVEZWxheTogMTI1XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGQgPSBhLmxhenlTaXplc0NvbmZpZyB8fCBhLmxhenlzaXplc0NvbmZpZyB8fCB7fTtcclxuICAgICAgICAgICAgZm9yIChiIGluIGMpIGIgaW4gZCB8fCAoZFtiXSA9IGNbYl0pO1xyXG4gICAgICAgICAgICBhLmxhenlTaXplc0NvbmZpZyA9IGQsIGsoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZC5pbml0ICYmIEYoKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0oKTtcclxuICAgICAgICB2YXIgRCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBnLCBsLCBtLCBvLCBwLCB5LCBELCBGLCBHLCBILCBJLCBKLCBLID0gL15pbWckL2ksXHJcbiAgICAgICAgICAgICAgICAgICAgTCA9IC9eaWZyYW1lJC9pLFxyXG4gICAgICAgICAgICAgICAgICAgIE0gPSBcIm9uc2Nyb2xsXCIgaW4gYSAmJiAhLyhnbGV8aW5nKWJvdC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxcclxuICAgICAgICAgICAgICAgICAgICBOID0gMCxcclxuICAgICAgICAgICAgICAgICAgICBPID0gMCxcclxuICAgICAgICAgICAgICAgICAgICBQID0gMCxcclxuICAgICAgICAgICAgICAgICAgICBRID0gLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgUiA9IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFAtLSwgKCFhIHx8IFAgPCAwIHx8ICFhLnRhcmdldCkgJiYgKFAgPSAwKVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUyA9IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsID09IEogJiYgKEogPSBcImhpZGRlblwiID09IHgoYi5ib2R5LCBcInZpc2liaWxpdHlcIikpLCBKIHx8IFwiaGlkZGVuXCIgIT0geChhLnBhcmVudE5vZGUsIFwidmlzaWJpbGl0eVwiKSAmJiBcImhpZGRlblwiICE9IHgoYSwgXCJ2aXNpYmlsaXR5XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBUID0gZnVuY3Rpb24gKGEsIGMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGQsIGYgPSBhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZyA9IFMoYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoRiAtPSBjLCBJICs9IGMsIEcgLT0gYywgSCArPSBjOyBnICYmIChmID0gZi5vZmZzZXRQYXJlbnQpICYmIGYgIT0gYi5ib2R5ICYmIGYgIT0gZTspKGcgPSAoeChmLCBcIm9wYWNpdHlcIikgfHwgMSkgPiAwKSAmJiBcInZpc2libGVcIiAhPSB4KGYsIFwib3ZlcmZsb3dcIikgJiYgKGQgPSBmLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLCBnID0gSCA+IGQubGVmdCAmJiBHIDwgZC5yaWdodCAmJiBJID4gZC50b3AgLSAxICYmIEYgPCBkLmJvdHRvbSArIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgVSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEsIGYsIGgsIGosIGssIG0sIG4sIHAsIHEsIHIsIHMsIHQsIHUgPSBjLmVsZW1lbnRzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKG8gPSBkLmxvYWRNb2RlKSAmJiBQIDwgOCAmJiAoYSA9IHUubGVuZ3RoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChmID0gMCwgUSsrLCByID0gIWQuZXhwYW5kIHx8IGQuZXhwYW5kIDwgMSA/IGUuY2xpZW50SGVpZ2h0ID4gNTAwICYmIGUuY2xpZW50V2lkdGggPiA1MDAgPyA1MDAgOiAzNzAgOiBkLmV4cGFuZCwgYy5fZGVmRXggPSByLCBzID0gciAqIGQuZXhwRmFjdG9yLCB0ID0gZC5oRmFjLCBKID0gbnVsbCwgTyA8IHMgJiYgUCA8IDEgJiYgUSA+IDIgJiYgbyA+IDIgJiYgIWIuaGlkZGVuID8gKE8gPSBzLCBRID0gMCkgOiBPID0gbyA+IDEgJiYgUSA+IDEgJiYgUCA8IDYgPyByIDogTjsgZiA8IGE7IGYrKylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodVtmXSAmJiAhdVtmXS5fbGF6eVJhY2UpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChNKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChwID0gdVtmXVtpXShcImRhdGEtZXhwYW5kXCIpKSAmJiAobSA9IDEgKiBwKSB8fCAobSA9IE8pLCBxICE9PSBtICYmICh5ID0gaW5uZXJXaWR0aCArIG0gKiB0LCBEID0gaW5uZXJIZWlnaHQgKyBtLCBuID0gLTEgKiBtLCBxID0gbSksIGggPSB1W2ZdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLCAoSSA9IGguYm90dG9tKSA+PSBuICYmIChGID0gaC50b3ApIDw9IEQgJiYgKEggPSBoLnJpZ2h0KSA+PSBuICogdCAmJiAoRyA9IGgubGVmdCkgPD0geSAmJiAoSSB8fCBIIHx8IEcgfHwgRikgJiYgKGQubG9hZEhpZGRlbiB8fCBTKHVbZl0pKSAmJiAobCAmJiBQIDwgMyAmJiAhcCAmJiAobyA8IDMgfHwgUSA8IDQpIHx8IFQodVtmXSwgbSkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFhKHVbZl0pLCBrID0gITAsIFAgPiA5KSBicmVha1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlICFrICYmIGwgJiYgIWogJiYgUCA8IDQgJiYgUSA8IDQgJiYgbyA+IDIgJiYgKGdbMF0gfHwgZC5wcmVsb2FkQWZ0ZXJMb2FkKSAmJiAoZ1swXSB8fCAhcCAmJiAoSSB8fCBIIHx8IEcgfHwgRiB8fCBcImF1dG9cIiAhPSB1W2ZdW2ldKGQuc2l6ZXNBdHRyKSkpICYmIChqID0gZ1swXSB8fCB1W2ZdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgYWEodVtmXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqICYmICFrICYmIGFhKGopXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFYgPSBCKFUpLFxyXG4gICAgICAgICAgICAgICAgICAgIFcgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYiA9IGEudGFyZ2V0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYi5fbGF6eUNhY2hlKSByZXR1cm4gdm9pZCBkZWxldGUgYi5fbGF6eUNhY2hlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBSKGEpLCBzKGIsIGQubG9hZGVkQ2xhc3MpLCB0KGIsIGQubG9hZGluZ0NsYXNzKSwgdShiLCBZKSwgdihiLCBcImxhenlsb2FkZWRcIilcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFggPSBBKFcpLFxyXG4gICAgICAgICAgICAgICAgICAgIFkgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBYKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogYS50YXJnZXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFogPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYS5jb250ZW50V2luZG93LmxvY2F0aW9uLnJlcGxhY2UoYilcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoYykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYS5zcmMgPSBiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICQgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYiwgYyA9IGFbaV0oZC5zcmNzZXRBdHRyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgKGIgPSBkLmN1c3RvbU1lZGlhW2FbaV0oXCJkYXRhLW1lZGlhXCIpIHx8IGFbaV0oXCJtZWRpYVwiKV0pICYmIGEuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgYiksIGMgJiYgYS5zZXRBdHRyaWJ1dGUoXCJzcmNzZXRcIiwgYylcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF8gPSBBKGZ1bmN0aW9uIChhLCBiLCBjLCBlLCBmKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnLCBoLCBqLCBsLCBvLCBwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAobyA9IHYoYSwgXCJsYXp5YmVmb3JldW52ZWlsXCIsIGIpKS5kZWZhdWx0UHJldmVudGVkIHx8IChlICYmIChjID8gcyhhLCBkLmF1dG9zaXplc0NsYXNzKSA6IGEuc2V0QXR0cmlidXRlKFwic2l6ZXNcIiwgZSkpLCBoID0gYVtpXShkLnNyY3NldEF0dHIpLCBnID0gYVtpXShkLnNyY0F0dHIpLCBmICYmIChqID0gYS5wYXJlbnROb2RlLCBsID0gaiAmJiBuLnRlc3Qoai5ub2RlTmFtZSB8fCBcIlwiKSksIHAgPSBiLmZpcmVzTG9hZCB8fCBcInNyY1wiIGluIGEgJiYgKGggfHwgZyB8fCBsKSwgbyA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogYVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBzKGEsIGQubG9hZGluZ0NsYXNzKSwgcCAmJiAoY2xlYXJUaW1lb3V0KG0pLCBtID0gayhSLCAyNTAwKSwgdShhLCBZLCAhMCkpLCBsICYmIHEuY2FsbChqLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic291cmNlXCIpLCAkKSwgaCA/IGEuc2V0QXR0cmlidXRlKFwic3Jjc2V0XCIsIGgpIDogZyAmJiAhbCAmJiAoTC50ZXN0KGEubm9kZU5hbWUpID8gWihhLCBnKSA6IGEuc3JjID0gZyksIGYgJiYgKGggfHwgbCkgJiYgdyhhLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IGdcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLCBhLl9sYXp5UmFjZSAmJiBkZWxldGUgYS5fbGF6eVJhY2UsIHQoYSwgZC5sYXp5Q2xhc3MpLCB6KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICghcCB8fCBhLmNvbXBsZXRlICYmIGEubmF0dXJhbFdpZHRoID4gMSkgJiYgKFcobyksIGEuX2xhenlDYWNoZSA9ICEwLCBrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIl9sYXp5Q2FjaGVcIiBpbiBhICYmIGRlbGV0ZSBhLl9sYXp5Q2FjaGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDkpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAhMClcclxuICAgICAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgICAgICBhYSA9IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiLCBjID0gSy50ZXN0KGEubm9kZU5hbWUpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZSA9IGMgJiYgKGFbaV0oZC5zaXplc0F0dHIpIHx8IGFbaV0oXCJzaXplc1wiKSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmID0gXCJhdXRvXCIgPT0gZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgKCFmICYmIGwgfHwgIWMgfHwgIWFbaV0oXCJzcmNcIikgJiYgIWEuc3Jjc2V0IHx8IGEuY29tcGxldGUgfHwgcihhLCBkLmVycm9yQ2xhc3MpIHx8ICFyKGEsIGQubGF6eUNsYXNzKSkgJiYgKGIgPSB2KGEsIFwibGF6eXVudmVpbHJlYWRcIikuZGV0YWlsLCBmICYmIEUudXBkYXRlRWxlbShhLCAhMCwgYS5vZmZzZXRXaWR0aCksIGEuX2xhenlSYWNlID0gITAsIFArKywgXyhhLCBiLCBmLCBlLCBjKSlcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGJhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmLm5vdygpIC0gcCA8IDk5OSkgcmV0dXJuIHZvaWQgayhiYSwgOTk5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhID0gQyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZC5sb2FkTW9kZSA9IDMsIFYoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gITAsIGQubG9hZE1vZGUgPSAzLCBWKCksIGooXCJzY3JvbGxcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMgPT0gZC5sb2FkTW9kZSAmJiAoZC5sb2FkTW9kZSA9IDIpLCBhKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sICEwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwID0gZi5ub3coKSwgYy5lbGVtZW50cyA9IGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShkLmxhenlDbGFzcyksIGcgPSBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoZC5sYXp5Q2xhc3MgKyBcIiBcIiArIGQucHJlbG9hZENsYXNzKSwgaihcInNjcm9sbFwiLCBWLCAhMCksIGooXCJyZXNpemVcIiwgViwgITApLCBhLk11dGF0aW9uT2JzZXJ2ZXIgPyBuZXcgTXV0YXRpb25PYnNlcnZlcihWKS5vYnNlcnZlKGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogITAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJ0cmVlOiAhMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pIDogKGVbaF0oXCJET01Ob2RlSW5zZXJ0ZWRcIiwgViwgITApLCBlW2hdKFwiRE9NQXR0ck1vZGlmaWVkXCIsIFYsICEwKSwgc2V0SW50ZXJ2YWwoViwgOTk5KSksIGooXCJoYXNoY2hhbmdlXCIsIFYsICEwKSwgW1wiZm9jdXNcIiwgXCJtb3VzZW92ZXJcIiwgXCJjbGlja1wiLCBcImxvYWRcIiwgXCJ0cmFuc2l0aW9uZW5kXCIsIFwiYW5pbWF0aW9uZW5kXCIsIFwid2Via2l0QW5pbWF0aW9uRW5kXCJdLmZvckVhY2goZnVuY3Rpb24gKGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJbaF0oYSwgViwgITApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLCAvZCR8XmMvLnRlc3QoYi5yZWFkeVN0YXRlKSA/IGJhKCkgOiAoaihcImxvYWRcIiwgYmEpLCBiW2hdKFwiRE9NQ29udGVudExvYWRlZFwiLCBWKSwgayhiYSwgMmU0KSksIGMuZWxlbWVudHMubGVuZ3RoID8gKFUoKSwgei5fbHNGbHVzaCgpKSA6IFYoKVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tFbGVtczogVixcclxuICAgICAgICAgICAgICAgICAgICB1bnZlaWw6IGFhXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0oKSxcclxuICAgICAgICAgICAgRSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhLCBjID0gQShmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSwgZiwgZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGEuX2xhenlzaXplc1dpZHRoID0gZCwgZCArPSBcInB4XCIsIGEuc2V0QXR0cmlidXRlKFwic2l6ZXNcIiwgZCksIG4udGVzdChiLm5vZGVOYW1lIHx8IFwiXCIpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChlID0gYi5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNvdXJjZVwiKSwgZiA9IDAsIGcgPSBlLmxlbmd0aDsgZiA8IGc7IGYrKykgZVtmXS5zZXRBdHRyaWJ1dGUoXCJzaXplc1wiLCBkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYy5kZXRhaWwuZGF0YUF0dHIgfHwgdyhhLCBjLmRldGFpbClcclxuICAgICAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgICAgICBlID0gZnVuY3Rpb24gKGEsIGIsIGQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGUsIGYgPSBhLnBhcmVudE5vZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGYgJiYgKGQgPSB5KGEsIGYsIGQpLCBlID0gdihhLCBcImxhenliZWZvcmVzaXplc1wiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFBdHRyOiAhIWJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSksIGUuZGVmYXVsdFByZXZlbnRlZCB8fCAoZCA9IGUuZGV0YWlsLndpZHRoKSAmJiBkICE9PSBhLl9sYXp5c2l6ZXNXaWR0aCAmJiBjKGEsIGYsIGUsIGQpKVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIsIGMgPSBhLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGIgPSAwOyBiIDwgYzsgYisrKSBlKGFbYl0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBnID0gQyhmKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhID0gYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGQuYXV0b3NpemVzQ2xhc3MpLCBqKFwicmVzaXplXCIsIGcpXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBjaGVja0VsZW1zOiBnLFxyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUVsZW06IGVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSgpLFxyXG4gICAgICAgICAgICBGID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgRi5pIHx8IChGLmkgPSAhMCwgRS5fKCksIEQuXygpKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBjID0ge1xyXG4gICAgICAgICAgICBjZmc6IGQsXHJcbiAgICAgICAgICAgIGF1dG9TaXplcjogRSxcclxuICAgICAgICAgICAgbG9hZGVyOiBELFxyXG4gICAgICAgICAgICBpbml0OiBGLFxyXG4gICAgICAgICAgICB1UDogdyxcclxuICAgICAgICAgICAgYUM6IHMsXHJcbiAgICAgICAgICAgIHJDOiB0LFxyXG4gICAgICAgICAgICBoQzogcixcclxuICAgICAgICAgICAgZmlyZTogdixcclxuICAgICAgICAgICAgZ1c6IHksXHJcbiAgICAgICAgICAgIHJBRjogelxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7Il19
